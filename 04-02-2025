#.1800. Maximum Ascending Subarray Sum.
class Solution {
    public int maxAscendingSum(int[] nums) {
        int maxSum = 0;     // To keep track of the maximum sum found.
        int currentSum = 0; // To keep track of the sum of the current ascending subarray.

        for (int i = 0; i < nums.length; i++) {
            // If this is the first element or the current element is greater than the previous one
            if (i == 0 || nums[i] > nums[i - 1]) {
                currentSum += nums[i];
            } else {
                // Update maxSum if needed and reset currentSum
                maxSum = Math.max(maxSum, currentSum);
                currentSum = nums[i];
            }
        }

        // Final check in case the largest sum is at the end
        maxSum = Math.max(maxSum, currentSum);

        return maxSum;
    }
}
