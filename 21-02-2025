#.1261. Find Elements in a Contaminated Binary Tree.

import java.util.HashSet;
import java.util.Set;

// Definition for a binary tree node.
class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode(int x) {
        val = x;
    }
}
class FindElements {

    private Set<Integer> recoveredValues = new HashSet<>();

    // Constructor to recover the tree
    public FindElements(TreeNode root) {
        recoverTree(root, 0);
    }

    // Recursive DFS to recover values
    private void recoverTree(TreeNode node, int val) {
        if (node == null) return;
        node.val = val;
        recoveredValues.add(val);
        recoverTree(node.left, 2 * val + 1);
        recoverTree(node.right, 2 * val + 2);
    }

    // Check if the target exists in the tree
    public boolean find(int target) {
        return recoveredValues.contains(target);
    }
}
