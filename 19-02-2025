#.1415. The k-th Lexicographical String of All Happy Strings of Length n.



class Solution {
    private List<String> happyStrings = new ArrayList<>();

    public String getHappyString(int n, int k) {
        backtrack(n, "", k);
        return happyStrings.size() >= k ? happyStrings.get(k - 1) : "";
    }

    private void backtrack(int n, String current, int k) {
        // If we reached the desired length
        if (current.length() == n) {
            happyStrings.add(current);
            return;
        }

        // Try adding 'a', 'b', 'c' ensuring no two adjacent chars are equal
        for (char ch : new char[]{'a', 'b', 'c'}) {
            if (current.isEmpty() || current.charAt(current.length() - 1) != ch) {
                // Stop recursion early if we already have k happy strings
                if (happyStrings.size() >= k) return;
                backtrack(n, current + ch, k);
            }
        }
    }
}
